package com.project.ems.mock;

import com.project.ems.employee.enums.EmploymentType;
import com.project.ems.employee.enums.Grade;
import com.project.ems.employee.enums.Position;
import com.project.ems.trainer.Trainer;
import com.project.ems.trainer.TrainerDto;
import lombok.AccessLevel;
import lombok.NoArgsConstructor;

import java.time.LocalDate;
import java.util.List;

import static com.project.ems.mock.AuthorityMock.getMockedAuthorities;
import static com.project.ems.mock.AuthorityMock.getMockedAuthorities1;
import static com.project.ems.mock.ExperienceMock.*;
import static com.project.ems.mock.RoleMock.getMockedRole1;
import static com.project.ems.mock.RoleMock.getMockedRole2;
import static com.project.ems.mock.StudyMock.*;

@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class TrainerMock {

    public static List<Trainer> getMockedTrainers() {
        return List.of(getMockedTrainer1(), getMockedTrainer2(), getMockedTrainer3(), getMockedTrainer4(), getMockedTrainer5(), getMockedTrainer6(), getMockedTrainer7(), getMockedTrainer8(), getMockedTrainer9(),
              getMockedTrainer10(), getMockedTrainer11(), getMockedTrainer12(), getMockedTrainer13(), getMockedTrainer14(), getMockedTrainer15(), getMockedTrainer16(), getMockedTrainer17(), getMockedTrainer18(),
              getMockedTrainer19(), getMockedTrainer20(), getMockedTrainer21(), getMockedTrainer22(), getMockedTrainer23(), getMockedTrainer24(), getMockedTrainer25(), getMockedTrainer26(), getMockedTrainer27(),
              getMockedTrainer28(), getMockedTrainer29(), getMockedTrainer30(), getMockedTrainer31(), getMockedTrainer32(), getMockedTrainer33(), getMockedTrainer34(), getMockedTrainer35(), getMockedTrainer36());
    }

    public static List<TrainerDto> getMockedTrainerDtos() {
        return List.of(getMockedTrainerDto1(), getMockedTrainerDto2(), getMockedTrainerDto3(), getMockedTrainerDto4(), getMockedTrainerDto5(), getMockedTrainerDto6(), getMockedTrainerDto7(), getMockedTrainerDto8(), getMockedTrainerDto9(),
              getMockedTrainerDto10(), getMockedTrainerDto11(), getMockedTrainerDto12(), getMockedTrainerDto13(), getMockedTrainerDto14(), getMockedTrainerDto15(), getMockedTrainerDto16(), getMockedTrainerDto17(), getMockedTrainerDto18(),
              getMockedTrainerDto19(), getMockedTrainerDto20(), getMockedTrainerDto21(), getMockedTrainerDto22(), getMockedTrainerDto23(), getMockedTrainerDto24(), getMockedTrainerDto25(), getMockedTrainerDto26(), getMockedTrainerDto27(),
              getMockedTrainerDto28(), getMockedTrainerDto29(), getMockedTrainerDto30(), getMockedTrainerDto31(), getMockedTrainerDto32(), getMockedTrainerDto33(), getMockedTrainerDto34(), getMockedTrainerDto35(), getMockedTrainerDto36());
    }

    public static List<Trainer> getMockedActiveTrainers() {
        return getMockedTrainers().stream().filter(Trainer::getIsActive).toList();
    }

    public static List<TrainerDto> getMockedActiveTrainerDtos() {
        return getMockedTrainerDtos().stream().filter(TrainerDto::getIsActive).toList();
    }

    public static List<Trainer> getMockedTrainersPage1() {
        return List.of(getMockedTrainer1(), getMockedTrainer2());
    }

    public static List<Trainer> getMockedTrainersPage2() {
        return List.of(getMockedTrainer3(), getMockedTrainer4());
    }

    public static List<Trainer> getMockedTrainersPage3() {
        return List.of(getMockedTrainer5(), getMockedTrainer6());
    }

    public static List<TrainerDto> getMockedTrainerDtosPage1() {
        return List.of(getMockedTrainerDto1(), getMockedTrainerDto2());
    }

    public static List<TrainerDto> getMockedTrainerDtosPage2() {
        return List.of(getMockedTrainerDto3(), getMockedTrainerDto4());
    }

    public static List<TrainerDto> getMockedTrainerDtosPage3() {
        return List.of(getMockedTrainerDto5(), getMockedTrainerDto6());
    }

    public static Trainer getMockedTrainer1() {
        return Trainer.builder()
              .id(1)
              .name("John Doe")
              .email("john.doe@example.com")
              .password("#John_Doe_Password0")
              .mobile("+40721543701")
              .address("123 Main St, Boston, USA")
              .birthday(LocalDate.of(1980, 2, 15))
              .role(getMockedRole2())
              .authorities(getMockedAuthorities())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(21000.0)
              .hiredAt(LocalDate.of(2015, 1, 1))
              .experiences(getMockedExperiences1())
              .studies(getMockedStudies1())
              .supervisingTrainer(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static Trainer getMockedTrainer2() {
        return Trainer.builder()
              .id(2)
              .name("Jane Smith")
              .email("jane.smith@example.com")
              .password("#Jane_Smith_Password0")
              .mobile("+40756321802")
              .address("456 Oak St, London, UK")
              .birthday(LocalDate.of(1982, 7, 10))
              .role(getMockedRole2())
              .authorities(getMockedAuthorities())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(19000.0)
              .hiredAt(LocalDate.of(2017, 1, 1))
              .experiences(getMockedExperiences2())
              .studies(getMockedStudies2())
              .supervisingTrainer(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static Trainer getMockedTrainer3() {
        return Trainer.builder()
              .id(3)
              .name("Michael Johnson")
              .email("michael.johnson@example.com")
              .password("#Michael_Johnson_Password0")
              .mobile("+40789712303")
              .address("789 Pine St, Madrid, Spain")
              .birthday(LocalDate.of(1990, 11, 20))
              .role(getMockedRole2())
              .authorities(getMockedAuthorities())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(17000.0)
              .hiredAt(LocalDate.of(2018, 1, 1))
              .experiences(getMockedExperiences3())
              .studies(getMockedStudies3())
              .supervisingTrainer(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static Trainer getMockedTrainer4() {
        return Trainer.builder()
              .id(4)
              .name("Laura Brown")
              .email("laura.brown@example.com")
              .password("#Laura_Brown_Password0")
              .mobile("+40734289604")
              .address("333 Elm St, Paris, France")
              .birthday(LocalDate.of(1985, 8, 25))
              .role(getMockedRole2())
              .authorities(getMockedAuthorities())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(16500.0)
              .hiredAt(LocalDate.of(2018, 2, 4))
              .experiences(getMockedExperiences4())
              .studies(getMockedStudies4())
              .supervisingTrainer(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static Trainer getMockedTrainer5() {
        return Trainer.builder()
              .id(5)
              .name("Robert Davis")
              .email("robert.davis@example.com")
              .password("#Robert_Davis_Password0")
              .mobile("+40754321805")
              .address("555 Oak St, Berlin, Germany")
              .birthday(LocalDate.of(1988, 5, 12))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(16750.0)
              .hiredAt(LocalDate.of(2017, 3, 18))
              .experiences(getMockedExperiences5())
              .studies(getMockedStudies5())
              .supervisingTrainer(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static Trainer getMockedTrainer6() {
        return Trainer.builder()
              .id(6)
              .name("Emily Wilson")
              .email("emily.wilson@example.com")
              .password("#Emily_Wilson_Password0")
              .mobile("+40789012606")
              .address("777 Pine St, Sydney, Australia")
              .birthday(LocalDate.of(1995, 9, 8))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(15000.0)
              .hiredAt(LocalDate.of(2018, 6, 20))
              .experiences(getMockedExperiences6())
              .studies(getMockedStudies6())
              .supervisingTrainer(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static Trainer getMockedTrainer7() {
        return Trainer.builder()
              .id(7)
              .name("Michaela Taylor")
              .email("michaela.taylor@example.com")
              .password("#Michaela_Taylor_Password0")
              .mobile("+40723145607")
              .address("999 Elm St, Rome, Italy")
              .birthday(LocalDate.of(1983, 12, 7))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(15750.0)
              .hiredAt(LocalDate.of(2019, 1, 20))
              .experiences(getMockedExperiences7())
              .studies(getMockedStudies1())
              .supervisingTrainer(getMockedTrainer1())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer8() {
        return Trainer.builder()
              .id(8)
              .name("David Anderson")
              .email("david.anderson@example.com")
              .password("#David_Anderson_Password0")
              .mobile("+40787654308")
              .address("111 Oak St, Moscow, Russia")
              .birthday(LocalDate.of(1992, 4, 23))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(18250.0)
              .hiredAt(LocalDate.of(2016, 4, 9))
              .experiences(getMockedExperiences8())
              .studies(getMockedStudies2())
              .supervisingTrainer(getMockedTrainer1())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer9() {
        return Trainer.builder()
              .id(9)
              .name("Sophia Garcia")
              .email("sophia.garcia@example.com")
              .password("#Sophia_Garcia_Password0")
              .mobile("+40754321809")
              .address("333 Pine St, Athens, Greece")
              .birthday(LocalDate.of(1998, 7, 30))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(18000.0)
              .hiredAt(LocalDate.of(2014, 11, 29))
              .experiences(getMockedExperiences1())
              .studies(getMockedStudies3())
              .supervisingTrainer(getMockedTrainer1())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer10() {
        return Trainer.builder()
              .id(10)
              .name("Joseph Wilson")
              .email("joseph.wilson@example.com")
              .password("#Joseph_Wilson_Password0")
              .mobile("+40789012610")
              .address("555 Elm St, Madrid, Spain")
              .birthday(LocalDate.of(1991, 3, 14))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(17000.0)
              .hiredAt(LocalDate.of(2017, 8, 14))
              .experiences(getMockedExperiences2())
              .studies(getMockedStudies4())
              .supervisingTrainer(getMockedTrainer1())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer11() {
        return Trainer.builder()
              .id(11)
              .name("Olivia Martinez")
              .email("olivia.martinez@example.com")
              .password("#Olivia_Martinez_Password0")
              .mobile("+40723145611")
              .address("777 Oak St, Tokyo, Japan")
              .birthday(LocalDate.of(1999, 10, 17))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(19500.0)
              .hiredAt(LocalDate.of(2015, 10, 10))
              .experiences(getMockedExperiences3())
              .studies(getMockedStudies5())
              .supervisingTrainer(getMockedTrainer1())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer12() {
        return Trainer.builder()
              .id(12)
              .name("Daniel Thompson")
              .email("daniel.thompson@example.com")
              .password("#Daniel_Thompson_Password0")
              .mobile("+40787654312")
              .address("999 Elm St, Seoul, South Korea")
              .birthday(LocalDate.of(1994, 6, 9))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(14750.0)
              .hiredAt(LocalDate.of(2016, 2, 15))
              .experiences(getMockedExperiences4())
              .studies(getMockedStudies6())
              .supervisingTrainer(getMockedTrainer1())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer13() {
        return Trainer.builder()
              .id(13)
              .name("Emma Thompson")
              .email("emma.thompson@example.com")
              .password("#Emma_Thompson_Password0")
              .mobile("+40754321813")
              .address("111 Pine St, Beijing, China")
              .birthday(LocalDate.of(2000, 12, 22))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(16250.0)
              .hiredAt(LocalDate.of(2018, 4, 8))
              .experiences(getMockedExperiences5())
              .studies(getMockedStudies1())
              .supervisingTrainer(getMockedTrainer2())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer14() {
        return Trainer.builder()
              .id(14)
              .name("Liam Brown")
              .email("liam.brown@example.com")
              .password("#Liam_Brown_Password0")
              .mobile("+40789012614")
              .address("333 Oak St, Cape Town, South Africa")
              .birthday(LocalDate.of(1997, 9, 4))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(17250.0)
              .hiredAt(LocalDate.of(2017, 12, 13))
              .experiences(getMockedExperiences6())
              .studies(getMockedStudies2())
              .supervisingTrainer(getMockedTrainer2())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer15() {
        return Trainer.builder()
              .id(15)
              .name("Olivia Wilson")
              .email("olivia.wilson@example.com")
              .password("#Olivia_Wilson_Password0")
              .mobile("+40723145615")
              .address("555 Elm St, Buenos Aires, Argentina")
              .birthday(LocalDate.of(2001, 4, 7))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(14500.0)
              .hiredAt(LocalDate.of(2018, 7, 25))
              .experiences(getMockedExperiences7())
              .studies(getMockedStudies3())
              .supervisingTrainer(getMockedTrainer2())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer16() {
        return Trainer.builder()
              .id(16)
              .name("Noah Taylor")
              .email("noah.taylor@example.com")
              .password("#Noah_Taylor_Password0")
              .mobile("+40787654316")
              .address("777 Pine St, Rio de Janeiro, Brazil")
              .birthday(LocalDate.of(1996, 11, 19))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(false)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(15250.0)
              .hiredAt(LocalDate.of(2017, 9, 30))
              .experiences(getMockedExperiences8())
              .studies(getMockedStudies4())
              .supervisingTrainer(getMockedTrainer2())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer17() {
        return Trainer.builder()
              .id(17)
              .name("Ava Johnson")
              .email("ava.johnson@example.com")
              .password("#Ava_Johnson_Password0")
              .mobile("+40754321817")
              .address("999 Oak St, Mexico City, Mexico")
              .birthday(LocalDate.of(2002, 6, 2))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(16000.0)
              .hiredAt(LocalDate.of(2017, 5, 17))
              .experiences(getMockedExperiences1())
              .studies(getMockedStudies5())
              .supervisingTrainer(getMockedTrainer2())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer18() {
        return Trainer.builder()
              .id(18)
              .name("William Davis")
              .email("william.davis@example.com")
              .password("#William_Davis_Password0")
              .mobile("+40789012618")
              .address("111 Elm St, Vancouver, Canada")
              .birthday(LocalDate.of(1993, 2, 25))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(18250.0)
              .hiredAt(LocalDate.of(2016, 4, 16))
              .experiences(getMockedExperiences2())
              .studies(getMockedStudies6())
              .supervisingTrainer(getMockedTrainer2())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer19() {
        return Trainer.builder()
              .id(19)
              .name("Sophia Martinez")
              .email("sophia.martinez@example.com")
              .password("#Sophia_Martinez_Password0")
              .mobile("+40723145619")
              .address("333 Oak St, Paris, France")
              .birthday(LocalDate.of(2003, 9, 8))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(19750.0)
              .hiredAt(LocalDate.of(2014, 9, 9))
              .experiences(getMockedExperiences3())
              .studies(getMockedStudies1())
              .supervisingTrainer(getMockedTrainer3())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer20() {
        return Trainer.builder()
              .id(20)
              .name("Isabella Anderson")
              .email("isabella.anderson@example.com")
              .password("#Isabella_Anderson_Password0")
              .mobile("+40787654320")
              .address("555 Elm St, London, UK")
              .birthday(LocalDate.of(1999, 6, 22))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(19250.0)
              .hiredAt(LocalDate.of(2015, 7, 14))
              .experiences(getMockedExperiences4())
              .studies(getMockedStudies2())
              .supervisingTrainer(getMockedTrainer3())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer21() {
        return Trainer.builder()
              .id(21)
              .name("Mason Thompson")
              .email("mason.thompson@example.com")
              .password("#Mason_Thompson_Password0")
              .mobile("+40754321821")
              .address("777 Pine St, Berlin, Germany")
              .birthday(LocalDate.of(2002, 12, 20))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(17750.0)
              .hiredAt(LocalDate.of(2017, 11, 20))
              .experiences(getMockedExperiences5())
              .studies(getMockedStudies3())
              .supervisingTrainer(getMockedTrainer3())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer22() {
        return Trainer.builder()
              .id(22)
              .name("Charlotte Thompson")
              .email("charlotte.thompson@example.com")
              .password("#Charlotte_Thompson_Password0")
              .mobile("+40789012622")
              .address("999 Oak St, Moscow, Russia")
              .birthday(LocalDate.of(1998, 10, 18))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(18750.0)
              .hiredAt(LocalDate.of(2016, 3, 8))
              .experiences(getMockedExperiences6())
              .studies(getMockedStudies4())
              .supervisingTrainer(getMockedTrainer3())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer23() {
        return Trainer.builder()
              .id(23)
              .name("Elijah Smith")
              .email("elijah.smith@example.com")
              .password("#Elijah_Smith_Password0")
              .mobile("+40723145623")
              .address("111 Elm St, Athens, Greece")
              .birthday(LocalDate.of(2003, 5, 3))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(17000.0)
              .hiredAt(LocalDate.of(2017, 10, 18))
              .experiences(getMockedExperiences7())
              .studies(getMockedStudies5())
              .supervisingTrainer(getMockedTrainer3())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer24() {
        return Trainer.builder()
              .id(24)
              .name("Amelia Johnson")
              .email("amelia.johnson@example.com")
              .password("#Amelia_Johnson_Password0")
              .mobile("+40787654324")
              .address("333 Pine St, Madrid, Spain")
              .birthday(LocalDate.of(1998, 12, 14))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(15500.0)
              .hiredAt(LocalDate.of(2018, 6, 3))
              .experiences(getMockedExperiences8())
              .studies(getMockedStudies6())
              .supervisingTrainer(getMockedTrainer3())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }


    public static Trainer getMockedTrainer25() {
        return Trainer.builder()
              .id(25)
              .name("Harper Wilson")
              .email("harper.wilson@example.com")
              .password("#Harper_Wilson_Password0")
              .mobile("+40754321825")
              .address("555 Oak St, Tokyo, Japan")
              .birthday(LocalDate.of(2001, 7, 27))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(20000.0)
              .hiredAt(LocalDate.of(2015, 8, 17))
              .experiences(getMockedExperiences1())
              .studies(getMockedStudies1())
              .supervisingTrainer(getMockedTrainer4())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer26() {
        return Trainer.builder()
              .id(26)
              .name("Benjamin Thompson")
              .email("benjamin.thompson@example.com")
              .password("#Benjamin_Thompson_Password0")
              .mobile("+40789012626")
              .address("777 Elm St, Seoul, South Korea")
              .birthday(LocalDate.of(2001, 2, 9))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(20250.0)
              .hiredAt(LocalDate.of(2016, 2, 20))
              .experiences(getMockedExperiences2())
              .studies(getMockedStudies2())
              .supervisingTrainer(getMockedTrainer4())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer27() {
        return Trainer.builder()
              .id(27)
              .name("Liam Thompson")
              .email("liam.thompson@example.com")
              .password("#Liam_Thompson_Password0")
              .mobile("+40723145627")
              .address("999 Oak St, Beijing, China")
              .birthday(LocalDate.of(2000, 9, 23))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(18500.0)
              .hiredAt(LocalDate.of(2017, 4, 20))
              .experiences(getMockedExperiences3())
              .studies(getMockedStudies3())
              .supervisingTrainer(getMockedTrainer4())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer28() {
        return Trainer.builder()
              .id(28)
              .name("Grace Martinez")
              .email("grace.martinez@example.com")
              .password("#Grace_Martinez_Password0")
              .mobile("+40787654328")
              .address("111 Elm St, Cape Town, South Africa")
              .birthday(LocalDate.of(2002, 6, 6))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(19500.0)
              .hiredAt(LocalDate.of(2016, 12, 18))
              .experiences(getMockedExperiences4())
              .studies(getMockedStudies4())
              .supervisingTrainer(getMockedTrainer4())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer29() {
        return Trainer.builder()
              .id(29)
              .name("Isabella White")
              .email("isabella.white@example.com")
              .password("#Isabella_White_Password0")
              .mobile("+40754321829")
              .address("333 Pine St, Buenos Aires, Argentina")
              .birthday(LocalDate.of(2002, 1, 19))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(16000.0)
              .hiredAt(LocalDate.of(2018, 5, 14))
              .experiences(getMockedExperiences5())
              .studies(getMockedStudies5())
              .supervisingTrainer(getMockedTrainer4())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer30() {
        return Trainer.builder()
              .id(30)
              .name("Logan Thompson")
              .email("logan.thompson@example.com")
              .password("#Logan_Thompson_Password0")
              .mobile("+40789012630")
              .address("555 Elm St, Rio de Janeiro, Brazil")
              .birthday(LocalDate.of(2003, 7, 2))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(20500.0)
              .hiredAt(LocalDate.of(2015, 8, 7))
              .experiences(getMockedExperiences6())
              .studies(getMockedStudies6())
              .supervisingTrainer(getMockedTrainer4())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer31() {
        return Trainer.builder()
              .id(31)
              .name("Evelyn Brown")
              .email("evelyn.brown@example.com")
              .password("#Evelyn_Brown_Password0")
              .mobile("+40723145631")
              .address("777 Oak St, Mexico City, Mexico")
              .birthday(LocalDate.of(1999, 3, 16))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(15500.0)
              .hiredAt(LocalDate.of(2019, 3, 19))
              .experiences(getMockedExperiences7())
              .studies(getMockedStudies1())
              .supervisingTrainer(getMockedTrainer5())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer32() {
        return Trainer.builder()
              .id(32)
              .name("Henry Davis")
              .email("henry.davis@example.com")
              .password("#Henry_Davis_Password0")
              .mobile("+40787654332")
              .address("999 Elm St, Vancouver, Canada")
              .birthday(LocalDate.of(1998, 10, 29))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(18250.0)
              .hiredAt(LocalDate.of(2018, 6, 12))
              .experiences(getMockedExperiences8())
              .studies(getMockedStudies2())
              .supervisingTrainer(getMockedTrainer5())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer33() {
        return Trainer.builder()
              .id(33)
              .name("Sofia Smith")
              .email("sofia.smith@example.com")
              .password("#Sofia_Smith_Password0")
              .mobile("+40754321833")
              .address("111 Oak St, Paris, France")
              .birthday(LocalDate.of(2000, 6, 11))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(16500.0)
              .hiredAt(LocalDate.of(2019, 11, 11))
              .experiences(getMockedExperiences1())
              .studies(getMockedStudies3())
              .supervisingTrainer(getMockedTrainer5())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer34() {
        return Trainer.builder()
              .id(34)
              .name("Jack Wilson")
              .email("jack.wilson@example.com")
              .password("#Jack_Wilson_Password0")
              .mobile("+40789012634")
              .address("333 Elm St, London, UK")
              .birthday(LocalDate.of(1997, 1, 24))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(18750.0)
              .hiredAt(LocalDate.of(2018, 4, 28))
              .experiences(getMockedExperiences2())
              .studies(getMockedStudies4())
              .supervisingTrainer(getMockedTrainer5())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer35() {
        return Trainer.builder()
              .id(35)
              .name("Emily Anderson")
              .email("emily.anderson@example.com")
              .password("#Emily_Anderson_Password0")
              .mobile("+40723145635")
              .address("555 Pine St, Berlin, Germany")
              .birthday(LocalDate.of(1995, 8, 6))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(19000.0)
              .hiredAt(LocalDate.of(2017, 1, 1))
              .experiences(getMockedExperiences3())
              .studies(getMockedStudies5())
              .supervisingTrainer(getMockedTrainer5())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static Trainer getMockedTrainer36() {
        return Trainer.builder()
              .id(36)
              .name("Adrian Thompson")
              .email("adrian.thompson@example.com")
              .password("#Adrian_Thompson_Password0")
              .mobile("+40787654336")
              .address("777 Elm St, Moscow, Russia")
              .birthday(LocalDate.of(1996, 3, 20))
              .role(getMockedRole1())
              .authorities(getMockedAuthorities1())
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(20750.0)
              .hiredAt(LocalDate.of(2016, 9, 14))
              .experiences(getMockedExperiences4())
              .studies(getMockedStudies6())
              .supervisingTrainer(getMockedTrainer5())
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto1() {
        return TrainerDto.builder()
              .id(1)
              .name("John Doe")
              .email("john.doe@example.com")
              .password("#John_Doe_Password0")
              .mobile("+40721543701")
              .address("123 Main St, Boston, USA")
              .birthday(LocalDate.of(1980, 2, 15))
              .roleId(2)
              .authoritiesIds(List.of(1, 2, 3, 4))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(21000.0)
              .hiredAt(LocalDate.of(2015, 1, 1))
              .experiencesIds(List.of(1, 2))
              .studiesIds(List.of(1, 2))
              .supervisingTrainerId(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static TrainerDto getMockedTrainerDto2() {
        return TrainerDto.builder()
              .id(2)
              .name("Jane Smith")
              .email("jane.smith@example.com")
              .password("#Jane_Smith_Password0")
              .mobile("+40756321802")
              .address("456 Oak St, London, UK")
              .birthday(LocalDate.of(1982, 7, 10))
              .roleId(2)
              .authoritiesIds(List.of(1, 2, 3, 4))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(19000.0)
              .hiredAt(LocalDate.of(2017, 1, 1))
              .experiencesIds(List.of(3, 4))
              .studiesIds(List.of(3, 4))
              .supervisingTrainerId(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static TrainerDto getMockedTrainerDto3() {
        return TrainerDto.builder()
              .id(3)
              .name("Michael Johnson")
              .email("michael.johnson@example.com")
              .password("#Michael_Johnson_Password0")
              .mobile("+40789712303")
              .address("789 Pine St, Madrid, Spain")
              .birthday(LocalDate.of(1990, 11, 20))
              .roleId(2)
              .authoritiesIds(List.of(1, 2, 3, 4))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(17000.0)
              .hiredAt(LocalDate.of(2018, 1, 1))
              .experiencesIds(List.of(5, 6))
              .studiesIds(List.of(5, 6))
              .supervisingTrainerId(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static TrainerDto getMockedTrainerDto4() {
        return TrainerDto.builder()
              .id(4)
              .name("Laura Brown")
              .email("laura.brown@example.com")
              .password("#Laura_Brown_Password0")
              .mobile("+40734289604")
              .address("333 Elm St, Paris, France")
              .birthday(LocalDate.of(1985, 8, 25))
              .roleId(2)
              .authoritiesIds(List.of(1, 2, 3, 4))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.FRONTEND)
              .grade(Grade.SENIOR)
              .salary(16500.0)
              .hiredAt(LocalDate.of(2018, 2, 4))
              .experiencesIds(List.of(7, 8))
              .studiesIds(List.of(7, 8))
              .supervisingTrainerId(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static TrainerDto getMockedTrainerDto5() {
        return TrainerDto.builder()
              .id(5)
              .name("Robert Davis")
              .email("robert.davis@example.com")
              .password("#Robert_Davis_Password0")
              .mobile("+40754321805")
              .address("555 Oak St, Berlin, Germany")
              .birthday(LocalDate.of(1988, 5, 12))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(16750.0)
              .hiredAt(LocalDate.of(2017, 3, 18))
              .experiencesIds(List.of(9, 10))
              .studiesIds(List.of(9, 10))
              .supervisingTrainerId(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static TrainerDto getMockedTrainerDto6() {
        return TrainerDto.builder()
              .id(6)
              .name("Emily Wilson")
              .email("emily.wilson@example.com")
              .password("#Emily_Wilson_Password0")
              .mobile("+40789012606")
              .address("777 Pine St, Sydney, Australia")
              .birthday(LocalDate.of(1995, 9, 8))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(15000.0)
              .hiredAt(LocalDate.of(2018, 6, 20))
              .experiencesIds(List.of(11, 12))
              .studiesIds(List.of(11, 12))
              .supervisingTrainerId(null)
              .nrTrainees(7)
              .maxTrainees(10)
              .build();
    }

    public static TrainerDto getMockedTrainerDto7() {
        return TrainerDto.builder()
              .id(7)
              .name("Michaela Taylor")
              .email("michaela.taylor@example.com")
              .password("#Michaela_Taylor_Password0")
              .mobile("+40723145607")
              .address("999 Elm St, Rome, Italy")
              .birthday(LocalDate.of(1983, 12, 7))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(15750.0)
              .hiredAt(LocalDate.of(2019, 1, 20))
              .experiencesIds(List.of(13, 14))
              .studiesIds(List.of(1, 2))
              .supervisingTrainerId(1)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto8() {
        return TrainerDto.builder()
              .id(8)
              .name("David Anderson")
              .email("david.anderson@example.com")
              .password("#David_Anderson_Password0")
              .mobile("+40787654308")
              .address("111 Oak St, Moscow, Russia")
              .birthday(LocalDate.of(1992, 4, 23))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.BACKEND)
              .grade(Grade.SENIOR)
              .salary(18250.0)
              .hiredAt(LocalDate.of(2016, 4, 9))
              .experiencesIds(List.of(15, 16))
              .studiesIds(List.of(3, 4))
              .supervisingTrainerId(1)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto9() {
        return TrainerDto.builder()
              .id(9)
              .name("Sophia Garcia")
              .email("sophia.garcia@example.com")
              .password("#Sophia_Garcia_Password0")
              .mobile("+40754321809")
              .address("333 Pine St, Athens, Greece")
              .birthday(LocalDate.of(1998, 7, 30))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(18000.0)
              .hiredAt(LocalDate.of(2014, 11, 29))
              .experiencesIds(List.of(1, 2))
              .studiesIds(List.of(5, 6))
              .supervisingTrainerId(1)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto10() {
        return TrainerDto.builder()
              .id(10)
              .name("Joseph Wilson")
              .email("joseph.wilson@example.com")
              .password("#Joseph_Wilson_Password0")
              .mobile("+40789012610")
              .address("555 Elm St, Madrid, Spain")
              .birthday(LocalDate.of(1991, 3, 14))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(17000.0)
              .hiredAt(LocalDate.of(2017, 8, 14))
              .experiencesIds(List.of(3, 4))
              .studiesIds(List.of(7, 8))
              .supervisingTrainerId(1)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto11() {
        return TrainerDto.builder()
              .id(11)
              .name("Olivia Martinez")
              .email("olivia.martinez@example.com")
              .password("#Olivia_Martinez_Password0")
              .mobile("+40723145611")
              .address("777 Oak St, Tokyo, Japan")
              .birthday(LocalDate.of(1999, 10, 17))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(19500.0)
              .hiredAt(LocalDate.of(2015, 10, 10))
              .experiencesIds(List.of(5, 6))
              .studiesIds(List.of(9, 10))
              .supervisingTrainerId(1)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto12() {
        return TrainerDto.builder()
              .id(12)
              .name("Daniel Thompson")
              .email("daniel.thompson@example.com")
              .password("#Daniel_Thompson_Password0")
              .mobile("+40787654312")
              .address("999 Elm St, Seoul, South Korea")
              .birthday(LocalDate.of(1994, 6, 9))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DEVOPS)
              .grade(Grade.SENIOR)
              .salary(14750.0)
              .hiredAt(LocalDate.of(2016, 2, 15))
              .experiencesIds(List.of(7, 8))
              .studiesIds(List.of(11, 12))
              .supervisingTrainerId(1)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto13() {
        return TrainerDto.builder()
              .id(13)
              .name("Emma Thompson")
              .email("emma.thompson@example.com")
              .password("#Emma_Thompson_Password0")
              .mobile("+40754321813")
              .address("111 Pine St, Beijing, China")
              .birthday(LocalDate.of(2000, 12, 22))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(16250.0)
              .hiredAt(LocalDate.of(2018, 4, 8))
              .experiencesIds(List.of(9, 10))
              .studiesIds(List.of(1, 2))
              .supervisingTrainerId(2)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto14() {
        return TrainerDto.builder()
              .id(14)
              .name("Liam Brown")
              .email("liam.brown@example.com")
              .password("#Liam_Brown_Password0")
              .mobile("+40789012614")
              .address("333 Oak St, Cape Town, South Africa")
              .birthday(LocalDate.of(1997, 9, 4))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(17250.0)
              .hiredAt(LocalDate.of(2017, 12, 13))
              .experiencesIds(List.of(11, 12))
              .studiesIds(List.of(3, 4))
              .supervisingTrainerId(2)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto15() {
        return TrainerDto.builder()
              .id(15)
              .name("Olivia Wilson")
              .email("olivia.wilson@example.com")
              .password("#Olivia_Wilson_Password0")
              .mobile("+40723145615")
              .address("555 Elm St, Buenos Aires, Argentina")
              .birthday(LocalDate.of(2001, 4, 7))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(14500.0)
              .hiredAt(LocalDate.of(2018, 7, 25))
              .experiencesIds(List.of(13, 14))
              .studiesIds(List.of(5, 6))
              .supervisingTrainerId(2)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto16() {
        return TrainerDto.builder()
              .id(16)
              .name("Noah Taylor")
              .email("noah.taylor@example.com")
              .password("#Noah_Taylor_Password0")
              .mobile("+40787654316")
              .address("777 Pine St, Rio de Janeiro, Brazil")
              .birthday(LocalDate.of(1996, 11, 19))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(false)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.TESTING)
              .grade(Grade.SENIOR)
              .salary(15250.0)
              .hiredAt(LocalDate.of(2017, 9, 30))
              .experiencesIds(List.of(15, 16))
              .studiesIds(List.of(7, 8))
              .supervisingTrainerId(2)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto17() {
        return TrainerDto.builder()
              .id(17)
              .name("Ava Johnson")
              .email("ava.johnson@example.com")
              .password("#Ava_Johnson_Password0")
              .mobile("+40754321817")
              .address("999 Oak St, Mexico City, Mexico")
              .birthday(LocalDate.of(2002, 6, 2))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(16000.0)
              .hiredAt(LocalDate.of(2017, 5, 17))
              .experiencesIds(List.of(1, 2))
              .studiesIds(List.of(9, 10))
              .supervisingTrainerId(2)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto18() {
        return TrainerDto.builder()
              .id(18)
              .name("William Davis")
              .email("william.davis@example.com")
              .password("#William_Davis_Password0")
              .mobile("+40789012618")
              .address("111 Elm St, Vancouver, Canada")
              .birthday(LocalDate.of(1993, 2, 25))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.FULL_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(18250.0)
              .hiredAt(LocalDate.of(2016, 4, 16))
              .experiencesIds(List.of(3, 4))
              .studiesIds(List.of(11, 12))
              .supervisingTrainerId(2)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto19() {
        return TrainerDto.builder()
              .id(19)
              .name("Sophia Martinez")
              .email("sophia.martinez@example.com")
              .password("#Sophia_Martinez_Password0")
              .mobile("+40723145619")
              .address("333 Oak St, Paris, France")
              .birthday(LocalDate.of(2003, 9, 8))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(19750.0)
              .hiredAt(LocalDate.of(2014, 9, 9))
              .experiencesIds(List.of(5, 6))
              .studiesIds(List.of(1, 2))
              .supervisingTrainerId(3)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto20() {
        return TrainerDto.builder()
              .id(20)
              .name("Isabella Anderson")
              .email("isabella.anderson@example.com")
              .password("#Isabella_Anderson_Password0")
              .mobile("+40787654320")
              .address("555 Elm St, London, UK")
              .birthday(LocalDate.of(1999, 6, 22))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DESIGN)
              .grade(Grade.SENIOR)
              .salary(19250.0)
              .hiredAt(LocalDate.of(2015, 7, 14))
              .experiencesIds(List.of(7, 8))
              .studiesIds(List.of(3, 4))
              .supervisingTrainerId(3)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto21() {
        return TrainerDto.builder()
              .id(21)
              .name("Mason Thompson")
              .email("mason.thompson@example.com")
              .password("#Mason_Thompson_Password0")
              .mobile("+40754321821")
              .address("777 Pine St, Berlin, Germany")
              .birthday(LocalDate.of(2002, 12, 20))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(17750.0)
              .hiredAt(LocalDate.of(2017, 11, 20))
              .experiencesIds(List.of(9, 10))
              .studiesIds(List.of(5, 6))
              .supervisingTrainerId(3)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto22() {
        return TrainerDto.builder()
              .id(22)
              .name("Charlotte Thompson")
              .email("charlotte.thompson@example.com")
              .password("#Charlotte_Thompson_Password0")
              .mobile("+40789012622")
              .address("999 Oak St, Moscow, Russia")
              .birthday(LocalDate.of(1998, 10, 18))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(18750.0)
              .hiredAt(LocalDate.of(2016, 3, 8))
              .experiencesIds(List.of(11, 12))
              .studiesIds(List.of(7, 8))
              .supervisingTrainerId(3)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto23() {
        return TrainerDto.builder()
              .id(23)
              .name("Elijah Smith")
              .email("elijah.smith@example.com")
              .password("#Elijah_Smith_Password0")
              .mobile("+40723145623")
              .address("111 Elm St, Athens, Greece")
              .birthday(LocalDate.of(2003, 5, 3))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(17000.0)
              .hiredAt(LocalDate.of(2017, 10, 18))
              .experiencesIds(List.of(13, 14))
              .studiesIds(List.of(9, 10))
              .supervisingTrainerId(3)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto24() {
        return TrainerDto.builder()
              .id(24)
              .name("Amelia Johnson")
              .email("amelia.johnson@example.com")
              .password("#Amelia_Johnson_Password0")
              .mobile("+40787654324")
              .address("333 Pine St, Madrid, Spain")
              .birthday(LocalDate.of(1998, 12, 14))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.DATA_ANALYST)
              .grade(Grade.SENIOR)
              .salary(15500.0)
              .hiredAt(LocalDate.of(2018, 6, 3))
              .experiencesIds(List.of(15, 16))
              .studiesIds(List.of(11, 12))
              .supervisingTrainerId(3)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto25() {
        return TrainerDto.builder()
              .id(25)
              .name("Harper Wilson")
              .email("harper.wilson@example.com")
              .password("#Harper_Wilson_Password0")
              .mobile("+40754321825")
              .address("555 Oak St, Tokyo, Japan")
              .birthday(LocalDate.of(2001, 7, 27))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(20000.0)
              .hiredAt(LocalDate.of(2015, 8, 17))
              .experiencesIds(List.of(1, 2))
              .studiesIds(List.of(1, 2))
              .supervisingTrainerId(4)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto26() {
        return TrainerDto.builder()
              .id(26)
              .name("Benjamin Thompson")
              .email("benjamin.thompson@example.com")
              .password("#Benjamin_Thompson_Password0")
              .mobile("+40789012626")
              .address("777 Elm St, Seoul, South Korea")
              .birthday(LocalDate.of(2001, 2, 9))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(20250.0)
              .hiredAt(LocalDate.of(2016, 2, 20))
              .experiencesIds(List.of(3, 4))
              .studiesIds(List.of(3, 4))
              .supervisingTrainerId(4)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto27() {
        return TrainerDto.builder()
              .id(27)
              .name("Liam Thompson")
              .email("liam.thompson@example.com")
              .password("#Liam_Thompson_Password0")
              .mobile("+40723145627")
              .address("999 Oak St, Beijing, China")
              .birthday(LocalDate.of(2000, 9, 23))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(18500.0)
              .hiredAt(LocalDate.of(2017, 4, 20))
              .experiencesIds(List.of(5, 6))
              .studiesIds(List.of(5, 6))
              .supervisingTrainerId(4)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto28() {
        return TrainerDto.builder()
              .id(28)
              .name("Grace Martinez")
              .email("grace.martinez@example.com")
              .password("#Grace_Martinez_Password0")
              .mobile("+40787654328")
              .address("111 Elm St, Cape Town, South Africa")
              .birthday(LocalDate.of(2002, 6, 6))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.MACHINE_LEARNING)
              .grade(Grade.SENIOR)
              .salary(19500.0)
              .hiredAt(LocalDate.of(2016, 12, 18))
              .experiencesIds(List.of(7, 8))
              .studiesIds(List.of(7, 8))
              .supervisingTrainerId(4)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto29() {
        return TrainerDto.builder()
              .id(29)
              .name("Isabella White")
              .email("isabella.white@example.com")
              .password("#Isabella_White_Password0")
              .mobile("+40754321829")
              .address("333 Pine St, Buenos Aires, Argentina")
              .birthday(LocalDate.of(2002, 1, 19))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(16000.0)
              .hiredAt(LocalDate.of(2018, 5, 14))
              .experiencesIds(List.of(9, 10))
              .studiesIds(List.of(9, 10))
              .supervisingTrainerId(4)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto30() {
        return TrainerDto.builder()
              .id(30)
              .name("Logan Thompson")
              .email("logan.thompson@example.com")
              .password("#Logan_Thompson_Password0")
              .mobile("+40789012630")
              .address("555 Elm St, Rio de Janeiro, Brazil")
              .birthday(LocalDate.of(2003, 7, 2))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(20500.0)
              .hiredAt(LocalDate.of(2015, 8, 7))
              .experiencesIds(List.of(11, 12))
              .studiesIds(List.of(11, 12))
              .supervisingTrainerId(4)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto31() {
        return TrainerDto.builder()
              .id(31)
              .name("Evelyn Brown")
              .email("evelyn.brown@example.com")
              .password("#Evelyn_Brown_Password0")
              .mobile("+40723145631")
              .address("777 Oak St, Mexico City, Mexico")
              .birthday(LocalDate.of(1999, 3, 16))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(15500.0)
              .hiredAt(LocalDate.of(2019, 3, 19))
              .experiencesIds(List.of(13, 14))
              .studiesIds(List.of(1, 2))
              .supervisingTrainerId(5)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto32() {
        return TrainerDto.builder()
              .id(32)
              .name("Henry Davis")
              .email("henry.davis@example.com")
              .password("#Henry_Davis_Password0")
              .mobile("+40787654332")
              .address("999 Elm St, Vancouver, Canada")
              .birthday(LocalDate.of(1998, 10, 29))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.BUSINESS_ANALYST)
              .grade(Grade.SENIOR)
              .salary(18250.0)
              .hiredAt(LocalDate.of(2018, 6, 12))
              .experiencesIds(List.of(15, 16))
              .studiesIds(List.of(3, 4))
              .supervisingTrainerId(5)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto33() {
        return TrainerDto.builder()
              .id(33)
              .name("Sofia Smith")
              .email("sofia.smith@example.com")
              .password("#Sofia_Smith_Password0")
              .mobile("+40754321833")
              .address("111 Oak St, Paris, France")
              .birthday(LocalDate.of(2000, 6, 11))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(16500.0)
              .hiredAt(LocalDate.of(2019, 11, 11))
              .experiencesIds(List.of(1, 2))
              .studiesIds(List.of(5, 6))
              .supervisingTrainerId(5)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto34() {
        return TrainerDto.builder()
              .id(34)
              .name("Jack Wilson")
              .email("jack.wilson@example.com")
              .password("#Jack_Wilson_Password0")
              .mobile("+40789012634")
              .address("333 Elm St, London, UK")
              .birthday(LocalDate.of(1997, 1, 24))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(18750.0)
              .hiredAt(LocalDate.of(2018, 4, 28))
              .experiencesIds(List.of(3, 4))
              .studiesIds(List.of(7, 8))
              .supervisingTrainerId(5)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto35() {
        return TrainerDto.builder()
              .id(35)
              .name("Emily Anderson")
              .email("emily.anderson@example.com")
              .password("#Emily_Anderson_Password0")
              .mobile("+40723145635")
              .address("555 Pine St, Berlin, Germany")
              .birthday(LocalDate.of(1995, 8, 6))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(true)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(19000.0)
              .hiredAt(LocalDate.of(2017, 1, 1))
              .experiencesIds(List.of(5, 6))
              .studiesIds(List.of(9, 10))
              .supervisingTrainerId(5)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }

    public static TrainerDto getMockedTrainerDto36() {
        return TrainerDto.builder()
              .id(36)
              .name("Adrian Thompson")
              .email("adrian.thompson@example.com")
              .password("#Adrian_Thompson_Password0")
              .mobile("+40787654336")
              .address("777 Elm St, Moscow, Russia")
              .birthday(LocalDate.of(1996, 3, 20))
              .roleId(1)
              .authoritiesIds(List.of(1, 2))
              .isActive(false)
              .employmentType(EmploymentType.PART_TIME)
              .position(Position.SCRUM_MASTER)
              .grade(Grade.SENIOR)
              .salary(20750.0)
              .hiredAt(LocalDate.of(2016, 9, 14))
              .experiencesIds(List.of(7, 8))
              .studiesIds(List.of(11, 12))
              .supervisingTrainerId(5)
              .nrTrainees(1)
              .maxTrainees(5)
              .build();
    }
}
